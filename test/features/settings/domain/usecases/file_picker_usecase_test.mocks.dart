// Mocks generated by Mockito 5.0.15 from annotations
// in audifie_version_1/test/features/settings/domain/usecases/file_picker_usecase_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;
import 'dart:io' as _i6;

import 'package:audifie_version_1/core/errors/failure.dart' as _i5;
import 'package:audifie_version_1/core/errors/success.dart' as _i7;
import 'package:audifie_version_1/features/settings/domain/entities/email_info.dart'
    as _i8;
import 'package:audifie_version_1/features/settings/domain/repositories/settings_repo.dart'
    as _i3;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [SettingsRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockSettingsRepo extends _i1.Mock implements _i3.SettingsRepo {
  MockSettingsRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.File>>> pickFiles() =>
      (super.noSuchMethod(Invocation.method(#pickFiles, []),
          returnValue: Future<_i2.Either<_i5.Failure, List<_i6.File>>>.value(
              _FakeEither_0<_i5.Failure, List<_i6.File>>())) as _i4
          .Future<_i2.Either<_i5.Failure, List<_i6.File>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i7.Success>> sendEmail(
          _i8.EmailInfo? emailInfo) =>
      (super.noSuchMethod(Invocation.method(#sendEmail, [emailInfo]),
              returnValue: Future<_i2.Either<_i5.Failure, _i7.Success>>.value(
                  _FakeEither_0<_i5.Failure, _i7.Success>()))
          as _i4.Future<_i2.Either<_i5.Failure, _i7.Success>>);
  @override
  String toString() => super.toString();
}
